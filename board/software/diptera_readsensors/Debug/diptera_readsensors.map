Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm168.o (exit)
/usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_copy_data.o)
                              ./fifo.o (__do_copy_data)
/usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_clear_bss.o)
                              ./fifo.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

inbuf               0x40              ./uart.o
outfifo             0x8               ./uart.o
infifo              0x8               ./uart.o
outbuf              0x40              ./uart.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm168.o
LOAD ./fifo.o
LOAD ./io.o
LOAD ./readsensors.o
LOAD ./uart.o
LOAD /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x8d6
 *(.vectors)
 .vectors       0x00000000       0x68 /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm168.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x00000068       0x37 ./io.o
                0x00000068                port_to_mode_PGM
                0x00000077                digital_pin_to_port_PGM
                0x0000008b                digital_pin_to_bit_mask_PGM
                0x0000006d                port_to_output_PGM
                0x00000072                port_to_input_PGM
                0x000000a0                . = ALIGN (0x2)
 *fill*         0x0000009f        0x1 00
                0x000000a0                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000a0        0x0 linker stubs
 *(.trampolines*)
                0x000000a0                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000a0                __ctors_start = .
 *(.ctors)
                0x000000a0                __ctors_end = .
                0x000000a0                __dtors_start = .
 *(.dtors)
                0x000000a0                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000a0        0x0 /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm168.o
                0x000000a0                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000a0        0xc /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm168.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000ac       0x16 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_copy_data.o)
                0x000000ac                __do_copy_data
 .init4         0x000000c2       0x10 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_clear_bss.o)
                0x000000c2                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000d2        0x8 /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm168.o
 *(.init9)
 *(.text)
 .text          0x000000da        0x4 /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm168.o
                0x000000da                __vector_22
                0x000000da                __vector_1
                0x000000da                __vector_24
                0x000000da                __vector_12
                0x000000da                __bad_interrupt
                0x000000da                __vector_6
                0x000000da                __vector_3
                0x000000da                __vector_23
                0x000000da                __vector_25
                0x000000da                __vector_11
                0x000000da                __vector_13
                0x000000da                __vector_17
                0x000000da                __vector_7
                0x000000da                __vector_5
                0x000000da                __vector_4
                0x000000da                __vector_9
                0x000000da                __vector_2
                0x000000da                __vector_21
                0x000000da                __vector_15
                0x000000da                __vector_8
                0x000000da                __vector_14
                0x000000da                __vector_10
                0x000000da                __vector_16
                0x000000da                __vector_20
 .text          0x000000de      0x2b6 ./fifo.o
                0x00000342                fifo_get_nowait
                0x00000150                fifo_put
                0x000000de                fifo_init
                0x00000256                fifo_get_wait
 .text          0x00000394      0x20a ./io.o
                0x0000044a                adc_read
                0x000003aa                led_on
                0x000004cc                digital_out_init
                0x000003e2                led_toggle
                0x000003c6                led_off
                0x0000040a                adc_init
                0x00000394                led_init
                0x000004f6                digital_write
 .text          0x0000059e       0x38 ./readsensors.o
                0x000005b2                init
                0x0000059e                main
 .text          0x000005d6      0x2fe ./uart.o
                0x000007a6                __vector_19
                0x000005d6                uart_init
                0x00000678                __vector_18
 .text          0x000008d4        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_exit.o)
 .text          0x000008d4        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_copy_data.o)
 .text          0x000008d4        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_clear_bss.o)
                0x000008d4                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x000008d4        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x000008d4        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x000008d4        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_clear_bss.o)
                0x000008d4                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000008d4        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_exit.o)
                0x000008d4                exit
                0x000008d4                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000008d4        0x2 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x000008d6                _etext = .

.data           0x00800100        0x0 load address 0x000008d6
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm168.o
 .data          0x00800100        0x0 ./fifo.o
 .data          0x00800100        0x0 ./io.o
 .data          0x00800100        0x0 ./readsensors.o
 .data          0x00800100        0x0 ./uart.o
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_exit.o)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_copy_data.o)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800100                . = ALIGN (0x2)
                0x00800100                _edata = .
                0x00800100                PROVIDE (__data_end, .)

.bss            0x00800100       0x90 load address 0x000008d6
                0x00800100                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800100        0x0 /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm168.o
 .bss           0x00800100        0x0 ./fifo.o
 .bss           0x00800100        0x0 ./io.o
 .bss           0x00800100        0x0 ./readsensors.o
 .bss           0x00800100        0x0 ./uart.o
 .bss           0x00800100        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_exit.o)
 .bss           0x00800100        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_copy_data.o)
 .bss           0x00800100        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00800100       0x90 ./uart.o
                0x00800100                inbuf
                0x00800140                outfifo
                0x00800148                infifo
                0x00800150                outbuf
                0x00800190                PROVIDE (__bss_end, .)
                0x000008d6                __data_load_start = LOADADDR (.data)
                0x000008d6                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800190        0x0
                0x00800190                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800190                PROVIDE (__noinit_end, .)
                0x00800190                _end = .
                0x00800190                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x15c0
 *(.stab)
 .stab          0x00000000      0x378 /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm168.o
 .stab          0x00000378      0x63c ./fifo.o
                                0x648 (size before relaxing)
 .stab          0x000009b4      0x534 ./io.o
                                0x6c0 (size before relaxing)
 .stab          0x00000ee8      0x1ec ./readsensors.o
                                0x444 (size before relaxing)
 .stab          0x000010d4      0x4ec ./uart.o
                                0x6a8 (size before relaxing)

.stabstr        0x00000000      0xd49
 *(.stabstr)
 .stabstr       0x00000000      0xd49 /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm168.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(diptera_readsensors.elf elf32-avr)
LOAD linker stubs
